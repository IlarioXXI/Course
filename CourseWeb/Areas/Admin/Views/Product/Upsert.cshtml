@model ProductVM
<form method="post" enctype="multipart/form-data">
    <input asp-for="Product.Id" hidden />
    @*     <input asp-for="Product.ImageUrl" hidden />
 *@
    <div class="row">
        <div class="col-10">
            <div class="border p-3 mt-4">
                <div class=" row pb-2">
                    <h2 class="text-primary">@(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
                </div>
                @*<div asp-validation-summary="ModelOnly">*@

            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.Title" class="p-0"></label>
                <input asp-for="Product.Title" class="form-control" />
                <span asp-validation-for="Product.Title" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.Author" class="p-0"></label>
                <input asp-for="Product.Author" class="form-control" />
                <span asp-validation-for="Product.Author" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.ISBN" class="p-0"></label>
                <input asp-for="Product.ISBN" class="form-control" />
                <span asp-validation-for="Product.ISBN" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.ListPrice" class="p-0"></label>
                <input asp-for="Product.ListPrice" class="form-control" />
                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.Price" class="p-0"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.Price50" class="p-0"></label>
                <input asp-for="Product.Price50" class="form-control" />
                <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for="Product.Price100" class="p-0"></label>
                <input asp-for="Product.Price100" class="form-control" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>

            @* Esempio con ViewBag
        <div class="mb-3 row p-1">
        <select asp-for="CategoryId" asp-items="ViewBag.CategoryList" class="form-select p-0">
            <option disabled selected>--Select Category--</option>
        </select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div> *@

            @*     asp-items="@(ViewData["CategoryList"] as IEnumerable<SelectListItem>)" quando usiamo i viewData
 *@
            <div class="mb-3 row p-1">
                <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select p-0">
                    <option disabled selected>--Select Category--</option>
                </select>
                <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <input type="file" name="files" class="form-control" multiple/>
                <label asp-for="Product.ProductImages" class="p-0"></label>
            </div>

            <div class="mb-3 row p-1">
                <label asp-for="Product.Description" class="p-0 text-muted"></label>
                <textarea asp-for="Product.Description" class="form-control"></textarea>
            </div>
            <div class="row">
                <div class="col-6 col-md-3">
                    @if (Model.Product.Id != 0)
                    {
                        <button type="submit" class="btn btn-primary form-control">Update</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary form-control">Create</button>
                    }

                </div>
                <div class="col-6 col-mid-3">
                    <a asp-controller="Product" asp-action="Index" class="btn btn-secondary border  form-control">Back to List</a>
                </div>
            </div>
        </div>
        <div class="col-2">
            @if (Model.Product.ProductImages != null)
            {
                @foreach (var image in Model.Product.ProductImages)
                {
                    <div class="border p-1 m-2 text-center">
                        <img src="@image.ImageUrl" width="100%" style="border-radius:5px; border:1px solid white" />
                        <a asp-action="DeleteImage" class="btn btn-danger" asp-route-imageId="@image.Id">
                            <i class="bi bi-trash-fill"></i> Delete
                        </a>
                    </div>
                }
                
            }
                        
        </div>
    </div>
</form>

@section Scripts {
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Mar 22, 2025:
            'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | spellcheckdialog a11ycheck typography | align lineheight | numlist bullist indent outdent | charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
